Archive member included because of file (symbol)

/opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                              ex2d.o (xprintf)
/opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_addsub_df.o)
                              /opt/pic32mx/lib/libdetpic32.a(xprintf.o) (__adddf3)
/opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_mul_df.o)
                              /opt/pic32mx/lib/libdetpic32.a(xprintf.o) (__muldf3)
/opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_eq_df.o)
                              /opt/pic32mx/lib/libdetpic32.a(xprintf.o) (__eqdf2)
/opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_gt_df.o)
                              /opt/pic32mx/lib/libdetpic32.a(xprintf.o) (__gtdf2)
/opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_ge_df.o)
                              /opt/pic32mx/lib/libdetpic32.a(xprintf.o) (__gedf2)
/opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_lt_df.o)
                              /opt/pic32mx/lib/libdetpic32.a(xprintf.o) (__ltdf2)
/opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_si_to_df.o)
                              /opt/pic32mx/lib/libdetpic32.a(xprintf.o) (__floatsidf)
/opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_df_to_si.o)
                              /opt/pic32mx/lib/libdetpic32.a(xprintf.o) (__fixdfsi)
/opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_thenan_df.o)
                              /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_addsub_df.o) (__thenan_df)
/opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_pack_df.o)
                              /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_addsub_df.o) (__pack_d)
/opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_unpack_df.o)
                              /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_addsub_df.o) (__unpack_d)
/opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_fpcmp_parts_df.o)
                              /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_eq_df.o) (__fpcmp_parts_d)

Allocating common symbols
Common symbol       size              file

i                   0x4               ex2d.o

Microchip PIC32 Memory-Usage Report

kseg0 Program-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.text                   0x9d001400         0x2168        8552  Application's executable code 
.rodata                 0x9d003568          0x120         288  Read-only constant data 
.sdata                  0x9d003688            0x8           8  Small data-initialization template 
      Total kseg0_program_mem used  :      0x2290        8848  1.7% of 0x7ec00

kseg0 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.startup                0x9d001000          0x2b0         688  C startup code 
         Total kseg0_boot_mem used  :       0x2b0         688  68.3% of 0x3f0

Exception-Memory Usage 
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.app_excpt              0x9d000180           0x14          20  General-Exception handler 
.vector_27              0x9d000560            0x8           8  Interrupt Vector 27 
          Total exception_mem used  :        0x1c          28  0.7% of 0x1000

kseg1 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
         Total kseg1_boot_mem used  :           0           0  <1% of 0x490
        --------------------------------------------------------------------------
         Total Program Memory used  :      0x255c        9564  1.8% of 0x80480
        --------------------------------------------------------------------------


kseg1 Data-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.sdata                  0xa0000000            0x8           8  Small initialized data 
.sbss                   0xa0000008            0x8           8  Small uninitialized data 
.stack                  0xa0000010         0x2000        8192  Minimum space reserved for stack 
         Total kseg1_data_mem used  :      0x2010        8208  6.3% of 0x20000
        --------------------------------------------------------------------------
            Total Data Memory used  :      0x2010        8208  6.3% of 0x20000
        --------------------------------------------------------------------------

Memory Configuration

Name             Origin             Length             Attributes
kseg0_program_mem 0x9d001400         0x0007ec00         xr
kseg0_boot_mem   0x9d001000         0x000003f0
exception_mem    0x9d000000         0x00001000
kseg1_boot_mem   0xbfc00000         0x00000490
debug_exec_mem   0xbfc02000         0x00000ff0
config3          0xbfc02ff0         0x00000004
config2          0xbfc02ff4         0x00000004
config1          0xbfc02ff8         0x00000004
config0          0xbfc02ffc         0x00000004
kseg1_data_mem   0xa0000000         0x00020000         w !x
sfrs             0xbf800000         0x00100000
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD ex2d.o
LOAD delay.o
LOAD send2displays2.o
LOAD /opt/pic32mx/lib/libdetpic32.a
LOAD /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a
                0x00000400                PROVIDE (_min_stack_size, 0x400)
                0x00000000                PROVIDE (_min_heap_size, 0x0)
LOAD /opt/pic32mx/lib/startup.o
                0x00000001                PROVIDE (_vector_spacing, 0x1)
                0x9d000000                _ebase_address = 0x9d000000
                0x00000001                _vector_spacing = 0x1
                0x9d001800                _reset = 0x9d001800
                0x00002000                _min_stack_size = 0x2000
                0x00000000                _min_heap_size = 0x0
                0xbfc00000                _RESET_ADDR = 0xbfc00000
                0xbfc00380                _BEV_EXCPT_ADDR = 0xbfc00380
                0xbfc00480                _DBG_EXCPT_ADDR = 0xbfc00480
                0xbfc02000                _DBG_CODE_ADDR = 0xbfc02000
                0x9d000180                _GEN_EXCPT_ADDR = (_ebase_address + 0x180)

.config_BFC02FF0
 *(.config_BFC02FF0)

.config_BFC02FF4
 *(.config_BFC02FF4)

.config_BFC02FF8
 *(.config_BFC02FF8)

.config_BFC02FFC
 *(.config_BFC02FFC)

.startup        0x9d001000      0x2b0
 *(.startup)
 .startup       0x9d001000      0x2b0 /opt/pic32mx/lib/startup.o
                0x9d001000                startup
 *(.startup)

.reset
 *(.reset)

.bev_excpt
 *(.bev_handler)

.dbg_excpt      0xbfc00480        0x0
                0xbfc00480                . = (. + DEFINED (_DEBUGGER)?0x8:0x0)

.dbg_code       0xbfc02000        0x0
                0xbfc02000                . = (. + DEFINED (_DEBUGGER)?0xff0:0x0)

.app_excpt      0x9d000180       0x14
 *(.gen_handler)
 .gen_handler   0x9d000180       0x14 /opt/pic32mx/lib/startup.o

.vector_0       0x9d000200        0x0
 *(.vector_0)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_0) <= (_vector_spacing << 0x5))), function at exception vector 0 too large)

.vector_1       0x9d000220        0x0
 *(.vector_1)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_1) <= (_vector_spacing << 0x5))), function at exception vector 1 too large)

.vector_2       0x9d000240        0x0
 *(.vector_2)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_2) <= (_vector_spacing << 0x5))), function at exception vector 2 too large)

.vector_3       0x9d000260        0x0
 *(.vector_3)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_3) <= (_vector_spacing << 0x5))), function at exception vector 3 too large)

.vector_4       0x9d000280        0x0
 *(.vector_4)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_4) <= (_vector_spacing << 0x5))), function at exception vector 4 too large)

.vector_5       0x9d0002a0        0x0
 *(.vector_5)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_5) <= (_vector_spacing << 0x5))), function at exception vector 5 too large)

.vector_6       0x9d0002c0        0x0
 *(.vector_6)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_6) <= (_vector_spacing << 0x5))), function at exception vector 6 too large)

.vector_7       0x9d0002e0        0x0
 *(.vector_7)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_7) <= (_vector_spacing << 0x5))), function at exception vector 7 too large)

.vector_8       0x9d000300        0x0
 *(.vector_8)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_8) <= (_vector_spacing << 0x5))), function at exception vector 8 too large)

.vector_9       0x9d000320        0x0
 *(.vector_9)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_9) <= (_vector_spacing << 0x5))), function at exception vector 9 too large)

.vector_10      0x9d000340        0x0
 *(.vector_10)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_10) <= (_vector_spacing << 0x5))), function at exception vector 10 too large)

.vector_11      0x9d000360        0x0
 *(.vector_11)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_11) <= (_vector_spacing << 0x5))), function at exception vector 11 too large)

.vector_12      0x9d000380        0x0
 *(.vector_12)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_12) <= (_vector_spacing << 0x5))), function at exception vector 12 too large)

.vector_13      0x9d0003a0        0x0
 *(.vector_13)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_13) <= (_vector_spacing << 0x5))), function at exception vector 13 too large)

.vector_14      0x9d0003c0        0x0
 *(.vector_14)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_14) <= (_vector_spacing << 0x5))), function at exception vector 14 too large)

.vector_15      0x9d0003e0        0x0
 *(.vector_15)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_15) <= (_vector_spacing << 0x5))), function at exception vector 15 too large)

.vector_16      0x9d000400        0x0
 *(.vector_16)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_16) <= (_vector_spacing << 0x5))), function at exception vector 16 too large)

.vector_17      0x9d000420        0x0
 *(.vector_17)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_17) <= (_vector_spacing << 0x5))), function at exception vector 17 too large)

.vector_18      0x9d000440        0x0
 *(.vector_18)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_18) <= (_vector_spacing << 0x5))), function at exception vector 18 too large)

.vector_19      0x9d000460        0x0
 *(.vector_19)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_19) <= (_vector_spacing << 0x5))), function at exception vector 19 too large)

.vector_20      0x9d000480        0x0
 *(.vector_20)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_20) <= (_vector_spacing << 0x5))), function at exception vector 20 too large)

.vector_21      0x9d0004a0        0x0
 *(.vector_21)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_21) <= (_vector_spacing << 0x5))), function at exception vector 21 too large)

.vector_22      0x9d0004c0        0x0
 *(.vector_22)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_22) <= (_vector_spacing << 0x5))), function at exception vector 22 too large)

.vector_23      0x9d0004e0        0x0
 *(.vector_23)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_23) <= (_vector_spacing << 0x5))), function at exception vector 23 too large)

.vector_24      0x9d000500        0x0
 *(.vector_24)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_24) <= (_vector_spacing << 0x5))), function at exception vector 24 too large)

.vector_25      0x9d000520        0x0
 *(.vector_25)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_25) <= (_vector_spacing << 0x5))), function at exception vector 25 too large)

.vector_26      0x9d000540        0x0
 *(.vector_26)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_26) <= (_vector_spacing << 0x5))), function at exception vector 26 too large)

.vector_27      0x9d000560        0x8
 *(.vector_27)
 .vector_27     0x9d000560        0x8 ex2d.o
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_27) <= (_vector_spacing << 0x5))), function at exception vector 27 too large)

.vector_28      0x9d000580        0x0
 *(.vector_28)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_28) <= (_vector_spacing << 0x5))), function at exception vector 28 too large)

.vector_29      0x9d0005a0        0x0
 *(.vector_29)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_29) <= (_vector_spacing << 0x5))), function at exception vector 29 too large)

.vector_30      0x9d0005c0        0x0
 *(.vector_30)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_30) <= (_vector_spacing << 0x5))), function at exception vector 30 too large)

.vector_31      0x9d0005e0        0x0
 *(.vector_31)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_31) <= (_vector_spacing << 0x5))), function at exception vector 31 too large)

.vector_32      0x9d000600        0x0
 *(.vector_32)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_32) <= (_vector_spacing << 0x5))), function at exception vector 32 too large)

.vector_33      0x9d000620        0x0
 *(.vector_33)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_33) <= (_vector_spacing << 0x5))), function at exception vector 33 too large)

.vector_34      0x9d000640        0x0
 *(.vector_34)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_34) <= (_vector_spacing << 0x5))), function at exception vector 34 too large)

.vector_35      0x9d000660        0x0
 *(.vector_35)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_35) <= (_vector_spacing << 0x5))), function at exception vector 35 too large)

.vector_36      0x9d000680        0x0
 *(.vector_36)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_36) <= (_vector_spacing << 0x5))), function at exception vector 36 too large)

.vector_37      0x9d0006a0        0x0
 *(.vector_37)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_37) <= (_vector_spacing << 0x5))), function at exception vector 37 too large)

.vector_38      0x9d0006c0        0x0
 *(.vector_38)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_38) <= (_vector_spacing << 0x5))), function at exception vector 38 too large)

.vector_39      0x9d0006e0        0x0
 *(.vector_39)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_39) <= (_vector_spacing << 0x5))), function at exception vector 39 too large)

.vector_40      0x9d000700        0x0
 *(.vector_40)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_40) <= (_vector_spacing << 0x5))), function at exception vector 40 too large)

.vector_41      0x9d000720        0x0
 *(.vector_41)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_41) <= (_vector_spacing << 0x5))), function at exception vector 41 too large)

.vector_42      0x9d000740        0x0
 *(.vector_42)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_42) <= (_vector_spacing << 0x5))), function at exception vector 42 too large)

.vector_43      0x9d000760        0x0
 *(.vector_43)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_43) <= (_vector_spacing << 0x5))), function at exception vector 43 too large)

.vector_44      0x9d000780        0x0
 *(.vector_44)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_44) <= (_vector_spacing << 0x5))), function at exception vector 44 too large)

.vector_45      0x9d0007a0        0x0
 *(.vector_45)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_45) <= (_vector_spacing << 0x5))), function at exception vector 45 too large)

.vector_46      0x9d0007c0        0x0
 *(.vector_46)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_46) <= (_vector_spacing << 0x5))), function at exception vector 46 too large)

.vector_47      0x9d0007e0        0x0
 *(.vector_47)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_47) <= (_vector_spacing << 0x5))), function at exception vector 47 too large)

.vector_48      0x9d000800        0x0
 *(.vector_48)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_48) <= (_vector_spacing << 0x5))), function at exception vector 48 too large)

.vector_49      0x9d000820        0x0
 *(.vector_49)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_49) <= (_vector_spacing << 0x5))), function at exception vector 49 too large)

.vector_50      0x9d000840        0x0
 *(.vector_50)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_50) <= (_vector_spacing << 0x5))), function at exception vector 50 too large)

.vector_51      0x9d000860        0x0
 *(.vector_51)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_51) <= (_vector_spacing << 0x5))), function at exception vector 51 too large)

.vector_52      0x9d000880        0x0
 *(.vector_52)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_52) <= (_vector_spacing << 0x5))), function at exception vector 52 too large)

.vector_53      0x9d0008a0        0x0
 *(.vector_53)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_53) <= (_vector_spacing << 0x5))), function at exception vector 53 too large)

.vector_54      0x9d0008c0        0x0
 *(.vector_54)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_54) <= (_vector_spacing << 0x5))), function at exception vector 54 too large)

.vector_55      0x9d0008e0        0x0
 *(.vector_55)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_55) <= (_vector_spacing << 0x5))), function at exception vector 55 too large)

.vector_56      0x9d000900        0x0
 *(.vector_56)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_56) <= (_vector_spacing << 0x5))), function at exception vector 56 too large)

.vector_57      0x9d000920        0x0
 *(.vector_57)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_57) <= (_vector_spacing << 0x5))), function at exception vector 57 too large)

.vector_58      0x9d000940        0x0
 *(.vector_58)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_58) <= (_vector_spacing << 0x5))), function at exception vector 58 too large)

.vector_59      0x9d000960        0x0
 *(.vector_59)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_59) <= (_vector_spacing << 0x5))), function at exception vector 59 too large)

.vector_60      0x9d000980        0x0
 *(.vector_60)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_60) <= (_vector_spacing << 0x5))), function at exception vector 60 too large)

.vector_61      0x9d0009a0        0x0
 *(.vector_61)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_61) <= (_vector_spacing << 0x5))), function at exception vector 61 too large)

.vector_62      0x9d0009c0        0x0
 *(.vector_62)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_62) <= (_vector_spacing << 0x5))), function at exception vector 62 too large)

.vector_63      0x9d0009e0        0x0
 *(.vector_63)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_63) <= (_vector_spacing << 0x5))), function at exception vector 63 too large)

.text           0x9d001400     0x2168
                0x9d001400                _text_begin = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x9d001400      0x430 ex2d.o
                0x9d0014d8                isr_adc
                0x9d001400                main
 .text          0x9d001830       0x48 delay.o
                0x9d001830                delay
 .text          0x9d001878      0x2b4 send2displays2.o
                0x9d001878                send2displays
 .text          0x9d001b2c      0x9b0 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                0x9d001b54                xprintf
 .text          0x9d0024dc      0x3e0 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_addsub_df.o)
                0x9d0027f0                __adddf3
                0x9d002850                __subdf3
 .text          0x9d0028bc      0x360 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_mul_df.o)
                0x9d0028bc                __muldf3
 .text          0x9d002c1c       0x90 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_eq_df.o)
                0x9d002c1c                __eqdf2
 .text          0x9d002cac       0x90 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_gt_df.o)
                0x9d002cac                __gtdf2
 .text          0x9d002d3c       0x90 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_ge_df.o)
                0x9d002d3c                __gedf2
 .text          0x9d002dcc       0x90 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_lt_df.o)
                0x9d002dcc                __ltdf2
 .text          0x9d002e5c       0xc8 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_si_to_df.o)
                0x9d002e5c                __floatsidf
 .text          0x9d002f24       0xd4 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_df_to_si.o)
                0x9d002f24                __fixdfsi
 .text          0x9d002ff8      0x234 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_pack_df.o)
                0x9d002ff8                __pack_d
 .text          0x9d00322c      0x124 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_unpack_df.o)
                0x9d00322c                __unpack_d
 .text          0x9d003350      0x168 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_fpcmp_parts_df.o)
                0x9d003350                __fpcmp_parts_d
 .text          0x9d0034b8       0xb0 /opt/pic32mx/lib/startup.o
                0x9d003528                printStr
                0x9d003508                printInt
                0x9d0034e8                readInt
                0x9d003560                resetCoreTimer
                0x9d0034d8                putChar
                0x9d003538                readStr
                0x9d003518                printInt10
                0x9d0034b8                inkey
                0x9d003548                exit
                0x9d0034c8                getChar
                0x9d0034f8                readInt10
                0x9d003558                readCoreTimer
 *(.text.*personality*)
 *(.gnu.warning)
 *(.mips16.fn.*)
 *(.mips16.call.*)
                0x9d003568                _text_end = .

.rodata         0x9d003568      0x120
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.str1.4
                0x9d003568        0x4 ex2d.o
 .rodata.str1.4
                0x9d00356c       0x11 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                                 0x14 (size before relaxing)
 *fill*         0x9d00357d        0x3 00
 .rodata.cst8   0x9d003580       0x20 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
 .rodata        0x9d0035a0       0x84 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
 *fill*         0x9d003624        0x4 00
 .rodata.cst8   0x9d003628       0x10 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_mul_df.o)
 .rodata.cst8   0x9d003638        0x8 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_si_to_df.o)
 .rodata        0x9d003640       0x18 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_thenan_df.o)
                0x9d003640                __thenan_df
 .rodata.cst8   0x9d003658        0x8 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_pack_df.o)
 .rodata.cst8   0x9d003660       0x10 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_unpack_df.o)
 .rodata        0x9d003670       0x15 /opt/pic32mx/lib/startup.o
 *(.rodata1)
                0x9d003688                . = ALIGN (0x4)
 *fill*         0x9d003685        0x3 00

.sdata2         0x9d003688        0x0
 *(.sdata2 .sdata2.* .gnu.linkonce.s2.*)
                0x9d003688                . = ALIGN (0x4)

.sbss2          0x9d003688        0x0
 *(.sbss2 .sbss2.* .gnu.linkonce.sb2.*)
                0x9d003688                . = ALIGN (0x4)

.eh_frame_hdr
 *(.eh_frame_hdr)

.eh_frame
 *(.eh_frame)

.dbg_data       0xa0000000        0x0
                0xa0000000                . = (. + DEFINED (_DEBUGGER)?0x200:0x0)

.data           0xa0000000        0x0 load address 0x9d003688
                0xa0000000                _data_begin = .
 *(.data .data.* .gnu.linkonce.d.*)
 *(.gnu.linkonce.d.*personality*)
 *(.data1)
                0x9d003688                _data_image_begin = LOADADDR (.data)

.eh_frame
 *(.eh_frame)
                0xa0007ff0                _gp = (ALIGN (0x10) + 0x7ff0)

.got
 *(.got.plt)
 *(.got)

.sdata          0xa0000000        0x8 load address 0x9d003688
                0xa0000000                _sdata_begin = .
 *(.sdata .sdata.* .gnu.linkonce.s.*)
 .sdata         0xa0000000        0x8 ex2d.o
                0xa0000000                init
                0xa0000004                counter
                0xa0000008                _sdata_end = .

.lit8
 *(.lit8)

.lit4
 *(.lit4)
                0xa0000008                . = ALIGN (0x4)
                0xa0000008                _data_end = .
                0xa0000008                _bss_begin = .

.sbss           0xa0000008        0x8
                0xa0000008                _sbss_begin = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 .sbss          0xa0000008        0x4 ex2d.o
                0xa0000008                delay_time
 *(.scommon)
 .scommon       0xa000000c        0x4 ex2d.o
                0xa000000c                i
                0xa0000010                _sbss_end = .

.bss            0xa0000010        0x0
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 *(COMMON)
                0xa0000010                . = ALIGN (0x4)
                0xa0000010                . = ALIGN (0x4)
                0xa0000010                _end = .
                0xa0000010                _bss_end = .

.persist        0xa0000010        0x0
 *(.persist)
                0xa0000010                . = ALIGN (0x4)

.heap           0xa0000010        0x0
                0xa0000010                _heap = .
                0xa0000010                . = (. + _min_heap_size)

.stack          0xa0000010     0x2000
                0xa0000010                _splim = .
                0xa0000010                _SPLIM = .
                0xa0002010                . = (. + _min_stack_size)
 *fill*         0xa0000010     0x2000 00

.ramfunc        0xa0002800        0x0 load address 0x9d003690
                0xa0002800                _ramfunc_begin = .
 *(.ramfunc .ramfunc.*)
                0xa0002800                . = ALIGN (0x4)
                0xa0002800                _ramfunc_end = .
                0x9d003690                _ramfunc_image_begin = LOADADDR (.ramfunc)
                0x00000000                _ramfunc_length = SIZEOF (.ramfunc)
                0x00002800                _bmxdkpba_address = (_ramfunc_begin - 0xa0000000)
                0x00020000                _bmxdudba_address = 0x20000
                0x00020000                _bmxdupba_address = 0x20000
                0xa0020000                _stack = (_ramfunc_length > 0x0)?(_ramfunc_begin - 0x4):0xa0020000
                0x00000001                ASSERT (((_min_stack_size + _min_heap_size) <= (_stack - _heap)), Not enough space to allocate both stack and heap.  Reduce heap and/or stack size.)

.pdr            0x00000000      0x280
 *(.pdr)
 .pdr           0x00000000       0x60 ex2d.o
 .pdr           0x00000060       0x20 delay.o
 .pdr           0x00000080       0x20 send2displays2.o
 .pdr           0x000000a0       0x40 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
 .pdr           0x000000e0       0x60 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_addsub_df.o)
 .pdr           0x00000140       0x20 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_mul_df.o)
 .pdr           0x00000160       0x20 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_eq_df.o)
 .pdr           0x00000180       0x20 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_gt_df.o)
 .pdr           0x000001a0       0x20 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_ge_df.o)
 .pdr           0x000001c0       0x20 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_lt_df.o)
 .pdr           0x000001e0       0x20 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_si_to_df.o)
 .pdr           0x00000200       0x20 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_df_to_si.o)
 .pdr           0x00000220       0x20 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_pack_df.o)
 .pdr           0x00000240       0x20 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_unpack_df.o)
 .pdr           0x00000260       0x20 /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_fpcmp_parts_df.o)

.reginfo        0x00000000       0x18
 *(.reginfo)
 .reginfo       0x00000000       0x18 ex2d.o

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000      0x4d0
 *(.comment)
 .comment       0x00000000       0x4d ex2d.o
 .comment       0x0000004d       0x4d delay.o
 .comment       0x0000009a       0x4d send2displays2.o
 .comment       0x000000e7       0x4d /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
 .comment       0x00000134       0x4d /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_addsub_df.o)
 .comment       0x00000181       0x4d /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_mul_df.o)
 .comment       0x000001ce       0x4d /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_eq_df.o)
 .comment       0x0000021b       0x4d /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_gt_df.o)
 .comment       0x00000268       0x4d /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_ge_df.o)
 .comment       0x000002b5       0x4d /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_lt_df.o)
 .comment       0x00000302       0x4d /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_si_to_df.o)
 .comment       0x0000034f       0x4d /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_df_to_si.o)
 .comment       0x0000039c       0x4d /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_thenan_df.o)
 .comment       0x000003e9       0x4d /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_pack_df.o)
 .comment       0x00000436       0x4d /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_unpack_df.o)
 .comment       0x00000483       0x4d /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a(_fpcmp_parts_df.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

/DISCARD/
 *(.note.GNU-stack)
OUTPUT(ex2d.elf elf32-tradlittlemips)

.mdebug.abi32   0x9d003690        0x0
